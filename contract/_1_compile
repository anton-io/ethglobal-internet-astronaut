#!/usr/bin/env python3

# Compile the smart contract and produce abi/bin files.

import os
import subprocess
DIR_THIS = os.path.abspath(os.path.dirname(__file__))


# Configuration:
CONTRACT = f"InternetAstronaut.sol"


def _docker_build():
    EXE_BUILD_SOLC = DIR_THIS + '/solc/_build'
    p = subprocess.run(EXE_BUILD_SOLC)
    if p.returncode != 0:
        pass


def _docker_solc():
    cmd = ['docker', 'run', 'solc', '--version']
    p = subprocess.run(cmd)
    if p.returncode != 0:
        pass


def contract_compile(contract=CONTRACT):
    _docker_solc()
    params = [
        'docker',
        'run',
        '-v', f"{DIR_THIS}/src:/src",
        'solc',
        '--base-path', '.',
        '--include-path', 'node_modules/',
        '--include-path', '/usr/local/lib/node_modules/',
        '--optimize',
        '-o', '/src/output',
        '--abi', '--bin',
        f"/src/{contract}"
    ]
    subprocess.run(params)


if __name__ == "__main__":
    contract_compile()
